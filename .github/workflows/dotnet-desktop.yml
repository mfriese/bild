name: Autobuild (main)

on:
  push:
    branches:
      - main

jobs:

  build:
    name: Build project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [windows-latest, macOs-latest]
        os: [macOs-latest]
        dotnet-version: ['9.0.x']
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
      - name: Upload Artifacts (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-${{ github.run_number }}-${{ matrix.os }}
          path: D:\a\bild\bild\Bild\bin\Release\net9.0\
      - name: Upload Artifacts (MacOS)
        if: ${{ matrix.os == 'macOs-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: artifacts-${{ github.run_number }}-${{ matrix.os }}
          path: /Users/runner/work/bild/bild/Bild/bin/Release/net9.0/

  release:
    name: Release project
    runs-on: windows-latest
    strategy:
      matrix:
#        os: [windows-latest, macOs-latest]
        os: [macOs-latest]
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: artifacts-${{ github.run_number }}-${{ matrix.os }}
      - name: Test artifact download
        run: ls -R
      - name: Archive project content
        uses: thedoctor0/zip-release@master
        with:
          filename: release-${{ github.run_number }}.zip
      - name: Create github release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: ${{ github.event.head_commit.message }}
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: release-${{ github.run_number }}.zip
          asset_name: release-v${{ github.run_number }}.zip
          asset_content_type: application/zip
      - name: Debug output
        run: echo "${{ steps.create-new-release.outputs.upload_url }}"
        env:
          new_release_uri: ${{ steps.create-new-release.outputs.upload_url }}

  debugging:
    name: Some debugging examples
    runs-on: windows-latest
    needs: release
    steps:
      - name: Show upload uri
        run: echo ${{ env.new_release_uri }}
          
        
